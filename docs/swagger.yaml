definitions:
  models.ImageInputData:
    properties:
      buildType:
        type: string
      customPkg:
        description: BasePkg      []pkgData ` description:"default package"`
        items:
          type: string
        type: array
      id:
        type: integer
      packages:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/images/delete/:id:
    delete:
      consumes:
      - application/json
      description: update single data
      parameters:
      - description: The key for staticblock
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: delete
      tags:
      - meta Manager
  /v1/images/get/{id}:
    get:
      consumes:
      - application/json
      description: get single one
      parameters:
      - description: The key for staticblock
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: get
      tags:
      - meta Manager
  /v1/images/param/getBaseData/:
    get:
      consumes:
      - application/json
      description: get architecture, release Version, output Format ,and default package
        name list
      produces:
      - application/json
      responses: {}
      summary: GetBaseData param
      tags:
      - meta Manager
  /v1/images/param/getCustomePkgList/:
    get:
      consumes:
      - application/json
      description: get default package name list. this list load from https://raw.githubusercontent.com/omnibuildplatform/omni-imager/main/etc/openEuler-minimal.json
      produces:
      - application/json
      responses: {}
      summary: GetCustomePkgList param
      tags:
      - meta Manager
  /v1/images/query:
    get:
      consumes:
      - application/json
      description: use param to query multi datas
      parameters:
      - description: project name
        in: query
        name: project_name
        required: true
        type: string
      - description: package name
        in: query
        name: pkg_name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: query multi datas
      tags:
      - meta Manager
  /v1/images/queryJobLogs/{name}:
    get:
      consumes:
      - application/json
      description: QueryJobLogs for given job name
      parameters:
      - description: The name for job
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: QueryJobLogs
      tags:
      - meta Manager
  /v1/images/queryJobStatus/{name}:
    get:
      consumes:
      - application/json
      description: QueryJobStatus for given job name
      parameters:
      - description: The name for job
        in: path
        name: name
        required: true
        type: string
      - description: 'The id for job in database. '
        in: query
        name: id
        type: string
      - description: 'job namespace '
        in: query
        name: ns
        type: string
      produces:
      - application/json
      responses: {}
      summary: QueryJobStatus
      tags:
      - meta Manager
  /v1/images/startBuild:
    post:
      consumes:
      - application/json
      description: start a image build job
      parameters:
      - description: body for ImageMeta content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ImageInputData'
      produces:
      - application/json
      responses: {}
      summary: StartBuild Job
      tags:
      - meta Manager
swagger: "2.0"
